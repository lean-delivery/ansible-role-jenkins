---
# defaults file for ansible-role-jenkins
jenkins2_user: jenkins
jenkins2_package_version: jenkins
# Choose release line between stable and latest
jenkins2_release_line: stable
jenkins2_jenkins2_disable_gpg_check: false
jenkins2_key_validate_certs: true
jenkins2_context_path: ''
jenkins2_cli_username: admin
jenkins2_cli_password: admin
jenkins2_home_directory: /var/lib/jenkins

jenkins2_config_java_cmd: ''
jenkins2_config_java_options: >-
  -Djava.awt.headless=true -Djenkins.install.runSetupWizard=false
  -Dmail.smtp.starttls.enable='true' -Dhudson.slaves.WorkspaceList=_
  -Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID='true'

jenkins2_config_http_port: 8080
jenkins2_config_listen_address: ''
jenkins2_config_debug_level: 5
jenkins2_config_enable_access_log: 'no'
jenkins2_config_handler_max: 100
jenkins2_config_handler_idle: 20
jenkins2_config_args: ''

jenkins2_proxy_url: ''
jenkins2_proxy_host: ''
jenkins2_proxy_port: 0
jenkins2_proxy_username: ''
jenkins2_proxy_password: ''
jenkins2_proxy_no_proxy_hosts: ''

# SSL
jenkins2_https_enabled: true
jenkins2_http_disabled: false
jenkins2_config_https_port: 8443
jenkins2_local_keystore: false
jenkins2_local_keystore_path: '{{ role_path }}/files/{{ jenkins2_ssl_key_store_name }}'
jenkins2_ssl_configure: true
jenkins2_ssl_key_store_name: jenkins2-ssl.keystore.jks
jenkins2_ssl_key_size: 4096
jenkins2_ssl_key_store_password: '123456'
jenkins2_ssl_key_store: '{{ jenkins2_home_directory }}/{{ jenkins2_ssl_key_store_name }}'
# https://docs.ansible.com/ansible/latest/openssl_certificate_module.html
jenkins2_ssl_certificate_provider: selfsigned

# Certificate
jenkins2_ca_domain: example.com
jenkins2_local_pkey_file_name: '{{ ansible_hostname }}.ca-pkey.pem'
jenkins2_local_cert_file_name: '{{ ansible_hostname }}.ca-cert.pem'


# SSH_KEYS generation properties
jenkins2_ssh_keys_generate: false
jenkins2_ssh_keys_private_keyname: 'id_rsa'
jenkins2_ssh_keys_size: 4096
jenkins2_ssh_keys_inv_slave_groupname: 'jenkins_ssh_slaves'

jenkins2_ssh_keys_slave_group: '{{ groups[jenkins2_ssh_keys_inv_slave_groupname]|default([""])}}'
jenkins2_ssh_keys_slave_hosts: '{%- set users = [] %}
    {%- for host in jenkins2_ssh_keys_slave_group %}
    {{- users.append(dict(host=host, users=hostvars[host]["jenkins_ssh_user"]|default([]))) }}
    {%- endfor %}
    {{- users -}}'
jenkins2_ssh_keys_slave_ips: '{%- set ips = [] %}{%- for host in jenkins2_ssh_keys_slave_group %}
    {{- ips.append(dict(host=host, ips=hostvars[host]["ansible_all_ipv4_addresses"]|default([]))) }}
    {%- endfor %}
    {{- ips -}}'
jenkins2_ssh_keys_slave_group_exist: '{{ ((jenkins2_ssh_keys_slave_group)[0]|default(""))  != ""}}'

# Plugin installation
jenkins2_updates_url: https://updates.jenkins.io
jenkins2_plugins_timeout: 2000
jenkins2_plugins_version: false
jenkins2_plugins_install_dependencies: true
jenkins2_plugins_suggested:
  - ant
  - antisamy-markup-formatter
  - blueocean
  - configuration-as-code
  - build-timeout
  - cloudbees-folder
  - credentials-binding
  - ec2
  - email-ext
  - file-operations
  - git
  - gitlab-plugin
  - gradle
  - ldap
  - mailer
  - matrix-auth
  - pipeline-stage-view
  - pipeline-utility-steps
  - ssh-agent
  - ssh-slaves
  - timestamper
  - workflow-aggregator
  - ws-cleanup
  - job-dsl
  - sonar
  # checkstyle: [Deprecated]
  # - checkstyle
  - log-parser
  # pmd: [Deprecated]
  # - pmd
  - warnings-ng
  - permissive-script-security
jenkins2_plugins_list: []
jenkins2_plugins_dict: {}

# Configure Jenkins use groovy scripts
jenkins2_configure_by_groovy: false

# SMTP properties
jenkins2_smtp_enabled: false
jenkins2_smtp_sysad_email: 'usermail@test.com'
jenkins2_smtp_user: 'usermail@test.com'
jenkins2_smtp_password: 'password'
jenkins2_smtp_port: '587'
jenkins2_smtp_host: 'smtp.office365.com'

# Set Credentials
jenkins2_credentials_enabled: true
jenkins2_credentials:
  slave:
    type: 'password'
    id: 'ci_slave'
    description: 'credentials for jenkins slave'
    username: 'user'
    password: 'password'
  jira:
    type: 'password'
    id: 'jirauser'
    description: 'username and password for jira'
    username: 'jiraUser'
    password: 'JiraUserPassword'
  pipeline_libraries:
    type: 'password'
    id: 'pipeline_libraries'
    description: 'username and password for pipeline libraries'
    username: 'pipelineLibrariesUser'
    password: 'pipelineLibrariesPassword'
  sshconnection:
    type: 'key'
    keySource: 0
    key: >
      -----BEGIN RSA PRIVATE KEY-----
      Here could be placed your private key,
      but we strongly recommend keeping private keys in vault service,
      like Ansible-vault or Hashicorp-vault, e.t.c
      -----END RSA PRIVATE KEY-----
    id: 'sshagent'
    username: 'hybris'
    passphrase: ''
    description: 'credentials for hybris user to connect remotely'
  cidbsysuser:
    type: 'password'
    id: 'ciDBsysUser'
    description: 'sys user for CI db'
    username: 'root'
    password: 'Qwerty_123'
  fqa1dbuser:
    type: 'password'
    id: 'fqa1DBuser'
    description: 'fqa1 DB user'
    username: 'fqa1user'
    password: 'fqa1password'
  dbtempuser:
    type: 'password'
    id: 'tempDBuser'
    description: 'DB user for datacut'
    username: 'DB_TEMP'
    password: 'DB_TEMP'
  gitlab_creds:
    type: 'password'
    id: 'GIT_CREDENTIALS'
    description: 'gitlab credentials username with password'
    username: '{{ gitlab_master_username | default("admin") }}'
    password: '{{ gitlab_master_password | default("password") }}'
  jenkinshttpconnectionuser:
    type: 'password'
    id: 'Jenkins_http_connection'
    description: 'for connection via jenkins cli; used for pipeline syntax check'
    username: '{{ jenkins2_cli_username }}'
    password: '{{ jenkins2_cli_password }}'
  gitlabusertoken:
    type: 'password'
    id: 'GIT_CREDENTIALS_TOKEN'
    description: 'to use with GL10.2+ but could be used with earlier versions'
    username: '{{ gitlab_master_username | default("admin") }}'
    password: '{{ gitlab_master_token | default("ToKen12345") }}'
  aws_credentials:
    type: 'password'
    id: 'AWS_CREDENTIALS'
    description: 'for operations in AWS'
    username: '{{ aws_access_key | default("AWSaccessKey") }}'
    password: '{{ aws_secret_key | default("AWSsecretKey") }}'
  gitlabtoken:
    type: 'gitlabtoken'
    id: 'gitlab_token'
    description: 'gitlab connection with token'
    token: '{{ gitlab_master_token | default("ToKen12345") }}'
  githubtoken:
    type: 'secrettext'
    id: 'github_token'
    description: 'GiHub connection with token'
    token: '{{ github_master_token | default("ToKen12345") }}'
  aws_ec2_credentials:
    type: 'aws_creds'
    id: 'AWS_EC2_CREDS'
    description: 'for ec2 plugin to create ec2 for slave instances'
    access_key: '{{ aws_access_key | default("AWSaccessKey") }}'
    sec_key: '{{ aws_secret_key | default("AWSsecretKey") }}'
  bitbucket_project:
    type: 'password'
    id: 'bitbucket_project'
    description: 'username and password for bitbucket project'
    username: 'bitbucketProjectUser'
    password: 'bitbucketProjectPassword'

# Configure pipeline libraries
jenkins2_pipeline_libraries_enabled: false
jenkins2_pipeline_libraries_name: 'Pipeline_Libraries'
jenkins2_pipeline_libraries_url: ''
jenkins2_pipeline_libraries_version: 'master'

# Configure bitbucket project
jenkins2_bitbucket_project_enabled: false
jenkins2_bitbucket_project_owner: 'Bitbucket_Project_Owner'
jenkins2_bitbucket_project_repo_regexp: ''
jenkins2_bitbucket_project_discover_branches_strategy: 1
jenkins2_bitbucket_project_discover_pr_strategy: 1
jenkins2_bitbucket_project_scan_interval: 60
jenkins2_bitbucket_project_autobuild_branches: 'master|develop|PR-[0-9]+'

# Configure SonarQube
jenkins2_sonarqube_enabled: false
jenkins2_sonarqube_name: 'SonarQube'
jenkins2_sonarqube_url: 'http://localhost:9000'
jenkins2_sonarqube_token: ''
jenkins2_sonarqube_maven_plugin: ''
jenkins2_sonarqube_arguments: ''
jenkins2_sonarqube_analysis_properties: ''

# Add custom files
jenkins2_custom_files_enabled: false
jenkins2_custom_files:
  log_parser:
    src: '{{ role_path }}/files/pipeline_error_in_init_console'
    dest: '{{ jenkins2_home_directory }}'
    owner: '{{ jenkins2_user }}'
    group: '{{ jenkins2_user }}'
    mode: '0755'

# Setup gitlab connection
jenkins2_gitlab_enabled: false
gitlab_external_url: 'https://localhost'
jenkins2_gitlab_token_cred: 'gitlab_token'

# Setup github connection
jenkins2_github_enabled: false
github_external_url: 'https://api.github.com'
github_manage_hooks: true
github_client_cache_size: 20
jenkins2_github_token_cred: github_token

# Add seed job - job that run dsl config and seeds jobs
# Add or replace dsl template
jenkins2_seed_job_enable: false
# DSL template file name. Do not forget to setup all needed variables for template
jenkins2_seed_job_template: 'dsl_hybris_create_job.groovy'
# to ignore existing jobs and do not rewrite them
jenkins2_seed_job_ignore_existing: true
jenkins2_seed_job_name: 'seed_job'

# EC2 plugin configuration
jenkins2_ec2_enable: false
jenkins2_ec2_cloud_parameters:
  cloud_name: 'AWS_cloud'
  credentials_id: 'AWS_EC2_CREDS'
  instance_cap_str: '2'
  private_key: |
    -----BEGIN RSA PRIVATE KEY-----
    Here could be placed your private key,
    but we strongly recommend keeping private keys in vault service,
    like Ansible-vault or Hashicorp-vault, e.t.c
    -----END RSA PRIVATE KEY-----
  region: 'us-east-1'
  use_instance_profile_for_credentials: false
  role_arn: ''
  role_session_name: ''
jenkins2_ec2_ami_list:
  ci_ami:
    ami: 'ami-AAAAAAAA'
    associatePublicIp: false
    connectBySSHProcess: true
    connectUsingPublicIp: false
    customDeviceMapping: ''
    deleteRootOnTermination: true
    description: 'Jenkins slave for CI'
    ebsOptimized: false
    iamInstanceProfile: ''
    idleTerminationMinutes: '5'
    initScript: ''
    instanceCapStr: '5'
    jvmopts: ''
    labelString: 'ci_slaves'
    launchTimeoutStr: ''
    numExecutors: '1'
    remoteAdmin: 'ec2-user'
    remoteFS: '/opt/jenkins'
    securityGroups: 'sg-11111111'
    stopOnTerminate: false
    subnetId: 'subnet-SSSSSSSS'
    tags:
      - {name: 'Name', value: 'CI Slave'}
      - {name: 'Name2', value: 'CI2 Slave'}
    tmpDir: ''
    type: 't2.medium'
    useDedicatedTenancy: false
    useEphemeralDevices: true
    usePrivateDnsName: true
    userData: ''
    zone: 'us-east-1a,us-east-1b'
    monitoring: false
    SpotConfiguration:
      enabled: true
      useBidPrice: true
      spotMaxBidPrice: '0.0139'
      spotBlockReservationDuration: '0'
      fallbackToOndemand: false
    t2Unlimited: false
  fv_ami:
    ami: 'ami-BBBBBBBB'
    associatePublicIp: false
    connectBySSHProcess: true
    connectUsingPublicIp: false
    customDeviceMapping: ''
    deleteRootOnTermination: true
    description: 'Jenkins slave for FV'
    ebsOptimized: false
    iamInstanceProfile: ''
    idleTerminationMinutes: '5'
    initScript: ''
    instanceCapStr: '5'
    jvmopts: ''
    labelString: 'ci_slaves'
    launchTimeoutStr: ''
    numExecutors: '1'
    remoteAdmin: 'ec2-user'
    remoteFS: '/opt/jenkins'
    securityGroups: 'sg-11111111'
    stopOnTerminate: false
    subnetId: 'subnet-SSSSSSSS'
    tags:
      - {name: 'Name', value: 'FV Slave'}
    tmpDir: ''
    type: 't2.medium'
    useDedicatedTenancy: false
    useEphemeralDevices: true
    usePrivateDnsName: true
    userData: ''
    zone: 'us-east-1a,us-east-1b'
    monitoring: false
    SpotConfiguration:
      enabled: false
      useBidPrice: true
      spotMaxBidPrice: '0.0139'
      spotBlockReservationDuration: '0'
      fallbackToOndemand: false
    t2Unlimited: false

# Jira configuration
jenkins2_jira_enabled: false
jenkins2_jira_url: 'https://jira.example.com'
jenkins2_jira_alternative_url: 'https://jira.example.com'
jenkins2_jira_use_http_auth: true
jenkins2_jira_support_wiki_notation: true
jenkins2_jira_record_scm_changes: false
jenkins2_jira_disable_changelog_annotations: false
jenkins2_jira_issue_pattern: 'PATTERN.*'
jenkins2_jira_update_relevant_issues: true
jenkins2_jira_credentials_id: 'jirauser'
jenkins2_jira_connection_timeout: '10'
jenkins2_jira_read_timeout: '30'
jenkins2_jira_thread_executor_size: '10'
jenkins2_jira_visible_for_group: ''
jenkins2_jira_visible_for_project_role: ''
jenkins2_jira_add_timestamps_for_comments: true
jenkins2_jira_timestamp_format: 'EEE, d MMM yyyy HH:mm:ss Z'

# Security configuration
jenkins2_security_enable: true
jenkins2_security_realm: 'basic'

# Global Tool Configuration
jenkins2_globaltools_enable: false
jenkins2_globaltools_jdk_enable: true
jenkins2_globaltools_jdk_version: []
jenkins2_globaltools_jdk_cred_user: 'user'
jenkins2_globaltools_jdk_cred_password: 'password'
jenkins2_globaltools_jdk_template: 'globaltools/jdk.groovy'
jenkins2_globaltools_maven_enable: true
jenkins2_globaltools_maven_version: []
jenkins2_globaltools_maven_template: 'globaltools/maven.groovy'
jenkins2_globaltools_ant_enable: true
jenkins2_globaltools_ant_version: []
jenkins2_globaltools_ant_template: 'globaltools/ant.groovy'
jenkins2_globaltools_nodejs_enable: true
jenkins2_globaltools_nodejs_version: []
jenkins2_globaltools_nodejs_template: 'globaltools/nodejs.groovy'
jenkins2_globaltools_sonarscanner_enable: true
jenkins2_globaltools_sonarscanner_version: []
jenkins2_globaltools_sonarscanner_template: 'globaltools/sonarscanner.groovy'
jenkins2_globaltools_sonarscannermsbuild_enable: true
jenkins2_globaltools_sonarscannermsbuild_version: []
jenkins2_globaltools_sonarscannermsbuild_template: 'globaltools/sonarscannermsbuild.groovy'
jenkins2_globaltools_gradle_enable: true
jenkins2_globaltools_gradle_version: []
jenkins2_globaltools_gradle_template: 'globaltools/gradle.groovy'
jenkins2_globaltools_docker_enable: true
jenkins2_globaltools_docker_version: []
jenkins2_globaltools_docker_template: 'globaltools/docker.groovy'

# Configure active directory
jenkins2_active_directory_domain_name: 'domain.com'
jenkins2_active_directory_domain_controller: 'server.domain.com:3268'
jenkins2_active_directory_site: 'null'
jenkins2_active_directory_bind_name: 'user@domain.com'
jenkins2_active_directory_bind_pass: 'password'
jenkins2_active_directory_start_tls: true
jenkins2_active_directory_remove_irrelevant_groups: false

# Configure ldap
jenkins2_ldap_server: 'ldap.server.com:3268'
jenkins2_ldap_root_dn: 'dc=server,dc=com'
jenkins2_ldap_user_search_base: ''
jenkins2_ldap_user_search: 'mail={0}'
jenkins2_ldap_group_search_base: ''
jenkins2_ldap_group_search_filter: ''
jenkins2_ldap_group_membership_filter: 'null'
jenkins2_ldap_manager_dn: 'CN=User,OU=Auto Users,OU=Service,OU=Managed by Enterprise Admins,DC=server,DC=com'
jenkins2_ldap_manager_password: 'Pa$$word'
jenkins2_ldap_inhibit_infer_root_dn: true
jenkins2_ldap_disable_mail_address_resolver: false
jenkins2_ldap_display_name_attribute_name: 'displayname'
jenkins2_ldap_mail_address_attribute_name: 'mail'

# Authorization stategy configuration
jenkins2_authorization_strategy_configure: true
jenkins2_authorization_strategy: 'logged-in'
jenkins2_authorization_strategy_logged_in_allow_anonymous_read: false

# Permissive script plugin
jenkins2_permissive_script_enabled: true

# Configure Jenkins use JCasC
jenkins2_configure_by_casc: true
jenkins2_jcasc_directory: 'jcasc'

jenkins2_jcasc_config:
  credentials:
    system:
      domainCredentials:
      - credentials:
        - usernamePassword:
            description: "credentials for jenkins slave "
            id: "ci_slave"
            password: '{{ jenkins2_credentials.slave.password }}'
            scope: GLOBAL
            username: "user"
        - usernamePassword:
            description: "FFFFUUUUUUUUUUU1"
            id: "ci_slave1"
            password: '{{ jenkins2_credentials.slave.password }}'
            scope: GLOBAL
            username: "user"
        - usernamePassword:
            description: "username and password for jira"
            id: "jirauser"
            password: '{{ jenkins2_credentials.jira.password }}'
            scope: GLOBAL
            username: "jiraUser"
        - usernamePassword:
            description: "username and password for pipeline libraries"
            id: "pipeline_libraries"
            password: '{{ jenkins2_credentials.pipeline_libraries.password }}'
            scope: GLOBAL
            username: "pipelineLibrariesUser"
        - basicSSHUserPrivateKey:
            description: "credentials for hybris user to connect remotely"
            id: "sshagent"
            privateKeySource:
              directEntry:
                privateKey: '{{ jenkins2_credentials.sshconnection.key | indent(16) }}'
            scope: GLOBAL
            username: "hybris"
        - usernamePassword:
            description: "sys user for CI db"
            id: "ciDBsysUser"
            password: '{{ jenkins2_credentials.cidbsysuser.password }}'
            scope: GLOBAL
            username: "root"
        - usernamePassword:
            description: "fqa1 DB user"
            id: "fqa1DBuser"
            password: '{{ jenkins2_credentials.fqa1dbuser.password }}'
            scope: GLOBAL
            username: "fqa1user"
        - usernamePassword:
            description: "DB user for datacut"
            id: "tempDBuser"
            password: '{{ jenkins2_credentials.dbtempuser.password }}'
            scope: GLOBAL
            username: "DB_TEMP"
        - usernamePassword:
            description: "gitlab credentials username with password"
            id: "GIT_CREDENTIALS"
            password: '{{ jenkins2_credentials.gitlab_creds.password }}'
            scope: GLOBAL
            username: "admin"
        - usernamePassword:
            description: "for connection via jenkins cli; used for pipeline syntax check"
            id: "Jenkins_http_connection"
            password: '{{ jenkins2_credentials.jenkinshttpconnectionuser.password }}'
            scope: GLOBAL
            username: "admin"
        - usernamePassword:
            description: "to use with GL10.2+ but could be used with earlier versions"
            id: "GIT_CREDENTIALS_TOKEN"
            password: '{{ jenkins2_credentials.gitlabusertoken.password }}'
            scope: GLOBAL
            username: "admin"
        - usernamePassword:
            description: "for operations in AWS"
            id: "AWS_CREDENTIALS"
            password: '{{ jenkins2_credentials.aws_credentials.password }}'
            scope: GLOBAL
            username: "AWSaccessKey"
        - gitLabApiTokenImpl:
            apiToken: '{{ jenkins2_credentials.gitlabtoken.token }}'
            description: "gitlab connection with token"
            id: "gitlab_token"
            scope: GLOBAL
        - string:
            description: "GiHub connection with token"
            id: "github_token"
            scope: GLOBAL
            secret: '{{ jenkins2_credentials.githubtoken.token }}'
        - aws:
            accessKey: "AWSaccessKey"
            description: "for ec2 plugin to create ec2 for slave instances"
            id: "AWS_EC2_CREDS"
            scope: GLOBAL
            secretKey: '{{ jenkins2_credentials.aws_ec2_credentials.sec_key }}'
        - usernamePassword:
            description: "username and password for bitbucket project"
            id: "bitbucket_project"
            password: '{{ jenkins2_credentials.bitbucket_project.password }}'
            scope: GLOBAL
            username: "bitbucketProjectUser"
  jenkins:
    agentProtocols:
    - "JNLP4-connect"
    - "Ping"
    authorizationStrategy:
      loggedInUsersCanDoAnything:
        allowAnonymousRead: false
    clouds:
    - amazonEC2:
        cloudName: "AWS_cloud"
        credentialsId: "AWS_EC2_CREDS"
        instanceCapStr: "2"
        region: "us-east-1"
        sshKeysCredentialsId: "sshconnection"
        templates:
        - ami: "ami-AAAAAAAA"
          amiType:
            unixData:
              rootCommandPrefix: "sudo"
              sshPort: "22"
          associatePublicIp: false
          connectBySSHProcess: true
          connectionStrategy: PRIVATE_DNS
          deleteRootOnTermination: true
          description: "Jenkins slave for CI"
          ebsOptimized: false
          hostKeyVerificationStrategy: CHECK_NEW_SOFT
          idleTerminationMinutes: "5"
          instanceCapStr: "5"
          labelString: "ci_slaves"
          maxTotalUses: -1
          minimumNumberOfInstances: 0
          minimumNumberOfSpareInstances: 0
          mode: NORMAL
          monitoring: false
          numExecutors: 1
          remoteAdmin: "ec2-user"
          remoteFS: "/opt/jenkins"
          securityGroups: "sg-11111111"
          spotConfig:
            spotMaxBidPrice: "0.0139"
            useBidPrice: true
          stopOnTerminate: false
          subnetId: "subnet-SSSSSSSS"
          t2Unlimited: false
          tags:
          - name: "Name"
            value: "CI Slave"
          - name: "Name2"
            value: "CI2 Slave"
          type: T2Medium
          useDedicatedTenancy: false
          useEphemeralDevices: true
          zone: "us-east-1a,us-east-1b"
        - ami: "ami-BBBBBBBB"
          amiType:
            unixData:
              rootCommandPrefix: "sudo"
              sshPort: "22"
          associatePublicIp: false
          connectBySSHProcess: true
          connectionStrategy: PRIVATE_DNS
          deleteRootOnTermination: true
          description: "Jenkins slave for FV"
          ebsOptimized: false
          hostKeyVerificationStrategy: CHECK_NEW_SOFT
          idleTerminationMinutes: "5"
          instanceCapStr: "5"
          labelString: "ci_slaves"
          maxTotalUses: -1
          minimumNumberOfInstances: 0
          minimumNumberOfSpareInstances: 0
          mode: NORMAL
          monitoring: false
          numExecutors: 1
          remoteAdmin: "ec2-user"
          remoteFS: "/opt/jenkins"
          securityGroups: "sg-11111111"
          stopOnTerminate: false
          subnetId: "subnet-SSSSSSSS"
          t2Unlimited: false
          tags:
          - name: "Name"
            value: "FV Slave"
          type: T2Medium
          useDedicatedTenancy: false
          useEphemeralDevices: true
          zone: "us-east-1a,us-east-1b"
        useInstanceProfileForCredentials: false
    crumbIssuer:
      standard:
        excludeClientIPFromCrumb: false
    disableRememberMe: false
    labelAtoms:
    - name: "ci_slaves"
    - name: "master"
    markupFormatter: "plainText"
    mode: NORMAL
    myViewsTabBar: "standard"
    numExecutors: 2
    primaryView:
      all:
        name: "all"
    projectNamingStrategy: "standard"
    quietPeriod: 5
    remotingSecurity:
      enabled: false
    scmCheckoutRetryCount: 0
    securityRealm:
      local:
        allowsSignup: false
        enableCaptcha: false
        users:
        - id: "{{ jenkins2_cli_username }}"
          password: "{{ jenkins2_cli_password }}"
    slaveAgentPort: 0
    updateCenter:
      sites:
      - id: "default"
        url: "https://updates.jenkins.io/update-center.json"
    views:
    - all:
        name: "all"
    viewsTabBar: "standard"
  unclassified:
    bitbucketEndpointConfiguration:
      endpoints:
      - bitbucketCloudEndpoint:
          enableCache: false
          manageHooks: false
          repositoriesCacheDuration: 0
          teamCacheDuration: 0
    buildDiscarders:
      configuredBuildDiscarders:
      - "jobBuildDiscarder"
    buildStepOperation:
      enabled: false
    email-ext:
      adminRequiredForTemplateTesting: false
      allowUnregisteredEnabled: false
      charset: "UTF-8"
      debugMode: false
      defaultBody: |-
        $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

        Check console output at $BUILD_URL to view the results.
      defaultContentType: "text/plain"
      defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
      defaultTriggerIds:
      - "hudson.plugins.emailext.plugins.trigger.FailureTrigger"
      mailAccount:
        smtpHost: "smtp.office365.com"
        smtpPassword: "some_smtp_passwd"
        smtpPort: "587"
        smtpUsername: "usermail@test.com"
      maxAttachmentSize: -1
      maxAttachmentSizeMb: -1
      precedenceBulk: false
      watchingEnabled: false
    fingerprints:
      fingerprintCleanupDisabled: false
      storage: "file"
    gitHubConfiguration:
      apiRateLimitChecker: ThrottleForNormalize
    gitLabConnectionConfig:
      connections:
      - clientBuilderId: "autodetect"
        connectionTimeout: 10
        ignoreCertificateErrors: false
        readTimeout: 10
      - apiTokenId: "gitlab_token"
        clientBuilderId: "autodetect"
        connectionTimeout: 10
        ignoreCertificateErrors: true
        name: "Gitlab"
        readTimeout: 10
        url: "https://localhost"
    gitSCM:
      addGitTagAction: false
      allowSecondFetch: false
      createAccountBasedOnEmail: false
      disableGitToolChooser: false
      hideCredentials: false
      showEntireCommitSummaryInChanges: false
      useExistingAccountWithSameEmail: false
    globalLibraries:
      libraries:
      - defaultVersion: "master"
        includeInChangesets: false
        name: "Pipeline_Libraries"
        retriever:
          modernSCM:
            scm:
              git:
                credentialsId: "pipeline_libraries"
                id: "pipeline_libraries"
                remote: "https://example.com/example.git"
                traits:
                - "gitBranchDiscovery"
    junitTestResultStorage:
      storage: "file"
    location:
      adminAddress: "usermail@test.com"
    logParser:
      legacyFormatting: false
    mailer:
      authentication:
        password: "some_smtp_passwd"
        username: "usermail@test.com"
      charset: "UTF-8"
      smtpHost: "smtp.office365.com"
      smtpPort: "587"
      useSsl: false
      useTls: false
    pollSCM:
      pollingThreadCount: 10
    sonarGlobalConfiguration:
      buildWrapperEnabled: false
    timestamper:
      allPipelines: false
      elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
      systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
  tool:
    git:
      installations:
      - home: "git"
        name: "Default"
