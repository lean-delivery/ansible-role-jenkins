---
# tasks file for ansible-role-jenkins
- name: Include variables
  include_vars: '{{ os_distribution_type }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      errors: ignore
  loop_control:
    loop_var: os_distribution_type


- name: Choose platform based task
  include_tasks: '{{ platform }}'
  with_first_found:
    - files:
        - 'system/{{ ansible_os_family }}.yml'
      errors: ignore
  loop_control:
    loop_var: platform

- name: Prepare
  block:
    - name: Install requirements
      package:
        name: '{{ jenkins_requirements }}'
        state: present
      register: status
      until: status is succeeded

    - name: Upgrade pip
      pip:
        name:
          - pip
        state: present
        extra_args: --upgrade
        executable: 'pip{{ ansible_facts.python.version.major }}'
      register: installed_packages
      until: installed_packages is success

    - name: Install pip packages
      pip:
        name:
          - pyOpenSSL
          - python-jenkins
          - lxml
        state: present
        executable: 'pip{{ ansible_facts.python.version.major }}'
      register: installed_packages
      until: installed_packages is success

    - name: Create group
      group:
        name: '{{ jenkins2_user | default("jenkins") }}'
        state: present

    - name: Create user
      user:
        name: '{{ jenkins2_user | default("jenkins") }}'
        group: '{{ jenkins2_user | default("jenkins") }}'
        shell: /bin/bash
        home: '{{ jenkins2_home_directory }}'
  become: true

- name: SSL preparation
  include_tasks: '{{ platform }}'
  with_first_found:
    - 'ssl/{{ ansible_system }}.yml'
    - 'system/not-supported.yml'
  loop_control:
    loop_var: platform
  when:
    - jenkins2_ssl_configure | bool

- name: Create symlink
  file:
    src: '{{ jenkins2_home_directory }}'
    dest: /var/lib/jenkins
    owner: '{{ jenkins2_user | default("jenkins") }}'
    group: '{{ jenkins2_user | default("jenkins") }}'
    state: link
  become: true
  when: jenkins2_home_directory != '/var/lib/jenkins'

- name: Jenkins repository install
  include_tasks: '{{ platform }}'
  with_first_found:
    - 'repository_install/{{ ansible_os_family }}.yml'
    - 'repository_install/not-supported.yml'
  loop_control:
    loop_var: platform

- name: Jenkins Installation
  package:
    name: '{{ jenkins2_package_version }}'
    state: present
  register: jenkins_was_installed
  until: jenkins_was_installed is succeeded
  become: true

- name: Apply Jenkins configuration file
  template:
    src: 'jenkins_system_config/{{ ansible_os_family }}_configuration.j2'
    dest: '{{ jenkins_config_service_path }}'
    owner: root
    group: root
    mode: 0644
    backup: true
  become: true
  notify:
    - Restart Jenkins

- name: Jenkins confuguration
  include_tasks: '{{ platform }}'
  with_first_found:
    - 'configure/{{ ansible_os_family }}.yml'
    - 'configure/not-supported.yml'
  loop_control:
    loop_var: platform
  when:
    - jenkins_was_installed is defined
    - jenkins_was_installed.changed | bool

- include_tasks: install_plugins.yml
  when: jenkins_was_installed is defined | bool

- include_tasks: configure_jcasc/jenkins_casc.yml
  when:
    - jenkins2_configure_by_casc | bool
    - not jenkins2_configure_by_groovy | bool

- name: Configure plugins use groovy
  block:
  - include_tasks: configure_plugins_groovy/configure_smtp.yml
    when: jenkins2_smtp_enabled | bool

  - include_tasks: configure_plugins_groovy/set_credentials.yml
    when: jenkins2_credentials_enabled | bool

  - include_tasks: configure_plugins_groovy/configure_pipeline_libraries.yml
    when: jenkins2_pipeline_libraries_enabled | bool

  - include_tasks: configure_plugins_groovy/configure_bitbucket_project.yml
    when: jenkins2_bitbucket_project_enabled | bool

  - include_tasks: configure_plugins_groovy/configure_sonarqube.yml
    when: jenkins2_sonarqube_enabled | bool

  - include_tasks: configure_plugins_groovy/configure_jira.yml
    when: jenkins2_jira_enabled | bool

  - include_tasks: configure_plugins_groovy/copy_custom_files.yml
    when: jenkins2_custom_files_enabled | bool

  - include_tasks: configure_plugins_groovy/configure_gitlab.yml
    when: jenkins2_gitlab_enabled | bool

  - include_tasks: configure_plugins_groovy/configure_github.yml
    when: jenkins2_github_enabled | bool

  - include_tasks: configure_plugins_groovy/configure_ec2.yml
    when: jenkins2_ec2_enable | bool

  - include_tasks: configure_plugins_groovy/configure_security.yml
    when: jenkins2_security_enable | bool

  - include_tasks: configure_globaltools.yml
    when: jenkins2_globaltools_enable | bool
  when:
    - jenkins2_configure_by_groovy | bool
    - not jenkins2_configure_by_casc | bool

- include_tasks: add_new_jobs.yml
  when: jenkins2_seed_job_enable | bool

- name: Disable insecure connection
  set_fact:
    jenkins2_config_http_port: '-1'
    jenkins2_config_proto: https
  when: jenkins2_http_disabled | bool

- include_tasks: configure_ssh_keys.yml
  when: jenkins2_ssh_keys_slave_group_exist and jenkins2_ssh_keys_generate and
    jenkins_was_installed is defined and jenkins_was_installed is changed

- name: Apply Jenkins configuration file and check HTTPS
  template:
    src: 'jenkins_system_config/{{ ansible_os_family }}_configuration.j2'
    dest: /etc/{{ (ansible_os_family == "Debian") | ternary('default','sysconfig') }}/jenkins
    owner: root
    group: root
    mode: 0644
    backup: true
  become: true
  notify:
    - Restart Jenkins with HTTPS
  when: jenkins2_https_enabled | bool
