---

- name: Create a directory .ssh if it doesn't exist
  file:
    path: "{{ jenkins2_home_directory }}/.ssh"
    state: directory
    mode: 0700
  become: true

- name: Ensure that openssh *private* key doesn't exist
  stat:
    path: "{{ jenkins2_home_directory }}/.ssh/\
    {{ jenkins2_ssh_keys_private_keyname }}"
  become: true
  register: private_key_stat

- name: Ensure that openssh *public* key doesn't exist
  stat:
    path: "{{ jenkins2_home_directory }}/.ssh/\
    {{ jenkins2_ssh_keys_private_keyname }}.pub"
  become: true
  register: public_key_stat

- name: Generate openssl private key for user jenkins
  openssl_privatekey:
    path: "{{ jenkins2_home_directory }}/.ssh/\
    {{ jenkins2_ssh_keys_private_keyname }}"
    size: "{{ jenkins2_ssh_keys_size }}"
  become: true
  when: not private_key_stat.stat.exists|bool

- name: Generate openssl public key for user jenkins
  openssl_publickey:
    path: "{{ jenkins2_home_directory }}/.ssh/\
    {{ jenkins2_ssh_keys_private_keyname }}.pub"
    privatekey_path: "{{ jenkins2_home_directory }}/.ssh/\
    {{ jenkins2_ssh_keys_private_keyname }}"
    format: OpenSSH
  become: true
  when: not public_key_stat.stat.exists|bool

- name: Get public key content
  command: "cat {{ jenkins2_home_directory }}/.ssh/\
  {{ jenkins2_ssh_keys_private_keyname }}.pub"
  register: ssh_public_key_fingerprint
  become: true
  changed_when: false

- name: Create user on remote host
  user:
    name: "{{ item.1 }}"
    state: present
  delegate_to: "{{ item.0.host }}"
  become: true
  with_subelements:
    - "{{ jenkins2_ssh_keys_slave_hosts }}"
    - users
  when: item.1 is defined

- name: Set authorized key on remote host
  authorized_key:
    user: "{{ item.1 }}"
    state: present
    key: "{{ ssh_public_key_fingerprint.stdout }}"
  delegate_to: "{{ item.0.host }}"
  become: true
  with_subelements:
    - "{{ jenkins2_ssh_keys_slave_hosts }}"
    - users
  when: item.1 is defined

- name: Generate knownhost pairs
  command: "ssh-keyscan -t rsa {{ item.1 }}"
  register: result_knownhost
  with_subelements:
    - "{{ jenkins2_ssh_keys_slave_ips }}"
    - ips
  changed_when: true

- name: Tell the host about our servers it might want to ssh to
  lineinfile:
    path: "{{ jenkins2_home_directory }}/.ssh/known_hosts"
    line: "{{ item.item[0].host|lower }},{{ item.stdout }}"
    create: true
    mode: 0644
  become: true
  with_items:
    - "{{ result_knownhost.results }}"

- name: Set corect folders owners/permissions
  file:
    path: "{{ item.dst }}"
    owner: "{{ jenkins2_user | default('jenkins') }}"
    group: "{{ jenkins2_user | default('jenkins') }}"
    mode: "{{ item.mode }}"
  become: true
  with_items:
    - {dst: "{{ jenkins2_home_directory }}/.ssh", mode: "0700"}
    - {dst: "{{ jenkins2_home_directory }}/.ssh/\
        {{ jenkins2_ssh_keys_private_keyname }}", mode: "0600"}
    - {dst: "{{ jenkins2_home_directory }}/.ssh/\
        {{ jenkins2_ssh_keys_private_keyname }}.pub", mode: "0600"}
    - {dst: "{{ jenkins2_home_directory }}/.ssh/known_hosts", mode: "0644"}
